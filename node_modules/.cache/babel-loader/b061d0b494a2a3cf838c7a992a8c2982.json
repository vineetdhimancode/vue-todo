{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-group\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Title\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"desc\"\n}, \"Description\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"completed\"\n}, \"Completed\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Add\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    action: \"\",\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => _ctx.addTask && _ctx.addTask(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"input-text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.title = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.title]]), _ctx.errorTitle ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.errorTitle), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"input-text\",\n    id: \"desc\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.desc = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.desc]]), _ctx.errorDesc ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString(_ctx.errorDesc), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"completed\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.completed = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, _ctx.completed]])]), _hoisted_9], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"mappings":";;EAEWA,KAAK,EAAC;AAAY;gCACrBC,oBAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;;;EAEnBF,KAAK,EAAC;;;EAERA,KAAK,EAAC;AAAY;gCACrBC,oBAAqC;EAA9BC,GAAG,EAAC;AAAM,GAAC,aAAW;;;EAExBF,KAAK,EAAC;;;EAERA,KAAK,EAAC;AAAY;gCACrBC,oBAAwC;EAAjCC,GAAG,EAAC;AAAW,GAAC,WAAS;gCAGlCD,oBAAoB,gBAAZ,KAAG;;;uBAffE,oBAgBO;IAhBDC,MAAM,EAAC,EAAE;IAAEC,QAAM,wDAAUC,qCAAO;MACpCL,oBAIM,OAJNM,UAIM,GAHJC,UAAgC,kBAChCP,oBAAiE;IAA1DQ,IAAI,EAAC,MAAM;IAACT,KAAK,EAAC,YAAY;IAACU,EAAE,EAAC,OAAO;+DAAUJ,UAAK;iDAALA,UAAK,KACtCA,eAAU,kBAAnCH,oBAAyD,OAAzDQ,UAAyD,mBAAlBL,eAAU,yDAEnDL,oBAIM,OAJNW,UAIM,GAHJC,UAAqC,kBACrCZ,oBAA+D;IAAxDQ,IAAI,EAAC,MAAM;IAACT,KAAK,EAAC,YAAY;IAACU,EAAE,EAAC,MAAM;+DAAUJ,SAAI;iDAAJA,SAAI,KACpCA,cAAS,kBAAlCH,oBAAuD,OAAvDW,UAAuD,mBAAjBR,cAAS,yDAEjDL,oBAGM,OAHNc,UAGM,GAFJC,UAAwC,kBACxCf,oBAA0D;IAAnDQ,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,WAAW;+DAAUJ,cAAS;qDAATA,cAAS,OAE1DW,UAAoB","names":["class","_createElementVNode","for","_createElementBlock","action","onSubmit","_ctx","_hoisted_1","_hoisted_2","type","id","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9"],"sourceRoot":"","sources":["/Users/vineetdhiman/Desktop/projects/vue/vue-todo/src/components/TaskForm.vue"],"sourcesContent":["<template>\n  <form action=\"\" @submit.prevent=\"addTask\">\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input type=\"text\" class=\"input-text\" id=\"title\" v-model=\"title\">\n        <div class=\"error\" v-if=\"errorTitle\">{{errorTitle}}</div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"desc\">Description</label>\n        <input type=\"text\" class=\"input-text\" id=\"desc\" v-model=\"desc\">\n        <div class=\"error\" v-if=\"errorDesc\">{{errorDesc}}</div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"completed\">Completed</label>\n        <input type=\"checkbox\" id=\"completed\" v-model=\"completed\">\n      </div>\n      <button>Add</button>\n  </form>\n</template>\n\n<script>\nexport default {\n    props: ['titlePro', 'completedPro', 'descPro'],\n    name: 'TaskForm',\n    data() {\n        return {\n            title: '',\n            completed: false,\n            desc: '',\n            errorDesc: null,\n            errorTitle: null,\n        }\n    },\n    methods: {\n        addTask() {\n            let tasks = this.getTask()\n            let task = {\n                id: (tasks.length  ? tasks[tasks.length - 1].id : 0) + 1,\n                title: this.title,\n                desc: this.desc,\n                completed: this.completed\n            }\n            this.title = '';\n            this.desc = '';\n            this.completed = '';\n\n            tasks.push(task);\n            this.saveTask(tasks)\n        },\n        getTask() {\n            let tasks =  localStorage.getItem('tasks')\n            if (!tasks) {\n                tasks = []\n            } else {\n\n                tasks = JSON.parse(tasks)\n            }\n            return tasks\n        },\n        saveTask(tasks) {\n            localStorage.setItem('tasks', JSON.stringify(tasks))\n        }\n    },\n    mounted: {\n        this.title = titlePro;\n    }\n}\n</script>\n\n<style>\n\nform {\n    background: #eeeded;\n    padding: 30px;\n    width: 40%;\n    border-radius: 10px;\n    margin: 0 auto;\n}\n\n.form-group {\n    margin: 10px 0px;\n    text-align: left;\n}\n\n.form-group .input-text {\n    width: 100%;\n    padding: 10px;\n    border: none;\n}\n\n.form-group .input-text:focus {\n    border: none;\n    border-bottom: 1px solid #42b983;\n}\n\ninput[type=\"checkbox\"] {\n    margin-left: 15px\n}\n\nform button {\n    padding: 10px 20px;\n    border: none;\n    outline: none;\n    background: rgb(0, 89, 255);\n    color: white;\n    border-radius: 5px;\n}\n\nform button:focus {\n    background: rgb(0, 57, 179);\n}\n</style>"]},"metadata":{},"sourceType":"module"}