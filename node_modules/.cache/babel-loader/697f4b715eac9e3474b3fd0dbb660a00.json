{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Home View\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TaskTab = _resolveComponent(\"TaskTab\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.title\n    }, [_createVNode(_component_TaskTab, {\n      completed: task.completed,\n      id: _ctx.id,\n      title: task.title\n    }, null, 8 /* PROPS */, [\"completed\", \"id\", \"title\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAM;gCACfC,oBAAkB,YAAd,WAAS;;;;uBADfC,oBAMM,OANNC,UAMM,GALJC,UAAkB,qBAElBF,oBAEMG,6BAFcC,WAAK,EAAbC,IAAI;yBAAhBL,oBAEM;MAFsBM,GAAG,EAAED,IAAI,CAACE;QACpCC,aAAmEC;MAAzDC,SAAS,EAAEL,IAAI,CAACK,SAAS;MAAGC,EAAE,EAAEC,OAAE;MAAGL,KAAK,EAAEF,IAAI,CAACE","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","$data","task","key","title","_createVNode","_component_TaskTab","completed","id","_ctx"],"sourceRoot":"","sources":["/Users/vineetdhiman/Desktop/projects/vue/vue-todo/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h1>Home View</h1>\n\n    <div v-for=\"task in tasks\" :key=\"task.title\">\n      <TaskTab :completed=\"task.completed\" :id=\"id\" :title=\"task.title\"/>\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport TaskTab from '../components/TaskTab.vue'\n\nexport default {\n  name: 'HomeView',\n  components: {\n    TaskTab\n  },\n  data() {\n    return {\n      tasks: []\n    }\n  },\n  mounted() {\n    let tasks = localStorage.getItem('tasks')\n    if (tasks) {\n      this.tasks = JSON.parse(tasks)\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}